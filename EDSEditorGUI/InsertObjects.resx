<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mlmTXrukPmEAAAAASUVORK5CYII=
</value>
  </data>
</root>